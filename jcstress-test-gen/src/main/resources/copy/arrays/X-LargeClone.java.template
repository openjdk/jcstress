/*
 * Copyright (c) 2017, Red Hat Inc. All rights reserved.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This code is free software; you can redistribute it and/or modify it
 * under the terms of the GNU General Public License version 2 only, as
 * published by the Free Software Foundation.  Oracle designates this
 * particular file as subject to the "Classpath" exception as provided
 * by Oracle in the LICENSE file that accompanied this code.
 *
 * This code is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 * version 2 for more details (a copy is included in the LICENSE file that
 * accompanied this code).
 *
 * You should have received a copy of the GNU General Public License version
 * 2 along with this work; if not, write to the Free Software Foundation,
 * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA
 * or visit www.oracle.com if you need additional information or have any
 * questions.
 */
package $package$;

import java.util.Arrays;
import org.openjdk.jcstress.annotations.*;
import org.openjdk.jcstress.infra.results.*;

#warn

/**
 * Tests if arrays experience coherence failures.
 */
@JCStressTest
@Outcome(id = "true, 131072, 0", expect = Expect.ACCEPTABLE,  desc = "Seeing array with all elements set.")
#if[safe]
@Outcome(id = "true, 131072, 1", expect = Expect.FORBIDDEN,   desc = "Seeing array, but some contents are default")
@Outcome(id = "true, 131072, 2", expect = Expect.FORBIDDEN,   desc = "Seeing array, but some contents are weird")
@Outcome(id = "true, 131072, 3", expect = Expect.FORBIDDEN,   desc = "Seeing array, but some contents are default/weird")
#else[safe]
@Outcome(id = "true, 131072, 1", expect = Expect.ACCEPTABLE,  desc = "Seeing array, but some contents are default")
@Outcome(id = "true, 131072, 2", expect = Expect.ACCEPTABLE,  desc = "Seeing array, but some contents are weird")
@Outcome(id = "true, 131072, 3", expect = Expect.FORBIDDEN,   desc = "Seeing array, but some contents are default/weird")
#end[safe]
@State
public class $name$ {

    static final $type$[] src;
    static {
       src = new $type$[131072];
       for (int c = 0; c < src.length; c++) {
         src[c] = $setLiteral$;
       }
    }

    $modifier$$type$[] copy;

    @Actor
    public void actor1() {
        copy = src.clone();
    }

    @Actor
    public void actor2(ZII_Result r) {
        $type$[] t = copy;
        if (t != null) {
          r.r1 = (t.getClass() == $type$[].class);
          r.r2 = t.length;
          boolean hasDefaults = false;
          boolean hasWeird = false;
          for ($type$ c : t) {
            boolean set = (c == $setLiteral$);
            boolean def = (c == $defaultLiteral$);
            hasDefaults |= def;
            hasWeird |= !def && !set;
          }
          r.r3 = (hasDefaults ? 1 : 0) + (hasWeird ? 2 : 0);
        } else {
          r.r1 = true;
          r.r2 = 131072;
          r.r3 = 0;
        }
    }

}
